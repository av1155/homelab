# Set the following environment variables:
# - HOSTNAME: The hostname/identifier for this server (e.g., pi-server, homelab-01, etc.)
# - WATCHTOWER_HTTP_API_TOKEN: API token for Watchtower HTTP API
# - SLACK_WEBHOOK_URL: Slack webhook URL for notifications

services:
    dockerproxy:
        image: ghcr.io/tecnativa/docker-socket-proxy:latest
        container_name: dockerproxy
        environment:
            - CONTAINERS=1
            - SERVICES=1
            - TASKS=1
            - POST=0
        ports:
            - 2375:2375
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        restart: unless-stopped

    portainer-agent:
        image: portainer/agent:latest
        container_name: portainer-agent
        restart: always
        ports:
            - 9001:9001
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/lib/docker/volumes:/var/lib/docker/volumes

    dozzle-agent:
        image: amir20/dozzle:latest
        command: agent
        container_name: dozzle-agent
        environment:
            - DOZZLE_HOSTNAME=${HOSTNAME}
        ports:
            - 7007:7007
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        restart: unless-stopped

    watchtower:
        container_name: watchtower
        image: containrrr/watchtower:latest
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: >
            --schedule "0 0 8 * * *"
            --cleanup
            --rolling-restart
            --log-level info
            --http-api-metrics
            --http-api-token ${WATCHTOWER_HTTP_API_TOKEN}
        environment:
            WATCHTOWER_NOTIFICATIONS: slack
            WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL: ${SLACK_WEBHOOK_URL}
            WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER: "Watchtower"
            WATCHTOWER_NOTIFICATION_SLACK_CHANNEL: "#watchtower"
            WATCHTOWER_NOTIFICATION_REPORT: "true"
            WATCHTOWER_NOTIFICATIONS_HOSTNAME: ${HOSTNAME}
            WATCHTOWER_NOTIFICATION_TEMPLATE: |
                {{- if .Report -}}
                  {{- with .Report -}}
                {{len .Scanned}} Scanned, {{len .Updated}} Updated, {{len .Failed}} Failed
                      {{- range .Updated}}
                - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} updated to {{.LatestImageID.ShortID}}
                      {{- end -}}
                      {{- range .Fresh}}
                - {{.Name}} ({{.ImageName}}): {{.State}}
                    {{- end -}}
                    {{- range .Skipped}}
                - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
                    {{- end -}}
                    {{- range .Failed}}
                - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}
                    {{- end -}}
                  {{- end -}}
                {{- else -}}
                  {{range .Entries -}}{{.Message}}{{"\n"}}{{- end -}}
                {{- end -}}
